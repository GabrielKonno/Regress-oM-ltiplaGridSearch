# -*- coding: utf-8 -*-
"""GridSearch_Estudo2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CQ4bj8gdm1mr_zC_f-bfTACwUfIxQYcx
"""

import pandas as pd
import numpy as np
import seaborn as sns

from sklearn.preprocessing import MinMaxScaler

from sklearn.model_selection import train_test_split
from sklearn.datasets import make_moons
from sklearn.metrics import accuracy_score

from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor,AdaBoostRegressor,GradientBoostingRegressor
from sklearn import metrics

from sklearn.model_selection import GridSearchCV

import statsmodels.formula.api as smf

df = pd.read_excel("house.xlsx")
df.head()

df = pd.get_dummies(df)
df.head()

df.describe()

df.info()

df = df.dropna()
df.info()

scaler = MinMaxScaler()


df_norm = pd.DataFrame(scaler.fit_transform(df), index=df.index, columns=df.columns)

df_norm.describe()

sns.histplot(data=df_norm, x="SalePrice", kde=True)

df_norm.info()

df_norm = df_norm.rename(columns={'2ndFlrSF': 'SecondFlrSF', '1stFlrSF':'FirstFlrSF', '3SsnPorch':'ThreeSsnPorch'})
df_norm.info()

"""Id, MSSubClass, LotFrontage, LotArea, OverallQual, OverallCond, YearBuilt, YearRemodAdd, MasVnrArea, BsmtFinSF1, BsmtFinSF2, BsmtUnfSF, TotalBsmtSF, 1stFlrSF, 2ndFlrSF, LowQualFinSF, GrLivArea, BsmtFullBath, BsmtHalfBath, FullBath, HalfBath, BedroomAbvGr, KitchenAbvGr, TotRmsAbvGrd, Fireplaces, GarageYrBlt, GarageCars, GarageArea, WoodDeckSF, OpenPorchSF, EnclosedPorch, 3SsnPorch, ScreenPorch, PoolArea, MiscVal, MoSold, YrSold, ExterQual_Ex, ExterQual_Fa, ExterQual_Gd, ExterQual_TA, ExterCond_Ex, ExterCond_Fa, ExterCond_Gd, ExterCond_Po, ExterCond_TA"""

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+LotArea+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtFinSF2+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+GarageArea+WoodDeckSF+OpenPorchSF+EnclosedPorch+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Gd+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+LotArea+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtFinSF2+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+GarageArea+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Gd+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+LotArea+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtFinSF2+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Gd+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+LotArea+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtFinSF2+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Gd+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+LotArea+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Gd+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+LotArea+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+LowQualFinSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+FirstFlrSF+SecondFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+SecondFlrSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+BsmtHalfBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+MoSold+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtFinSF1+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ThreeSsnPorch+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+YearRemodAdd+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageYrBlt+GarageCars+WoodDeckSF+OpenPorchSF+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+OpenPorchSF+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~Id+MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+YrSold+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+LotFrontage+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Ex+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Fa+ExterCond_Po+ExterCond_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Fa+ExterCond_Po'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+MiscVal+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Po'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA+ExterCond_Po'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

#modelo MRLS
function = 'SalePrice~MSSubClass+OverallQual+OverallCond+YearBuilt+MasVnrArea+BsmtUnfSF+TotalBsmtSF+GrLivArea+BsmtFullBath+FullBath+BedroomAbvGr+KitchenAbvGr+TotRmsAbvGrd+Fireplaces+GarageCars+WoodDeckSF+ScreenPorch+PoolArea+ExterQual_Ex+ExterQual_Fa+ExterQual_Gd+ExterQual_TA'
model = smf.ols(formula=function, data=df_norm).fit()
print(model.summary())

y = np.array(df_norm["SalePrice"])
x = df_norm[['MSSubClass', 'OverallQual', 'OverallCond', 'YearBuilt', 'MasVnrArea', 'BsmtUnfSF', 'TotalBsmtSF', 'GrLivArea', 'BsmtFullBath', 'FullBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces', 'GarageCars', 'WoodDeckSF', 'ScreenPorch', 'PoolArea', 'ExterQual_Ex', 'ExterQual_Fa', 'ExterQual_Gd', 'ExterQual_TA']]

x_list = list(df[['MSSubClass', 'OverallQual', 'OverallCond', 'YearBuilt', 'MasVnrArea', 'BsmtUnfSF', 'TotalBsmtSF', 'GrLivArea', 'BsmtFullBath', 'FullBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'Fireplaces', 'GarageCars', 'WoodDeckSF', 'ScreenPorch', 'PoolArea', 'ExterQual_Ex', 'ExterQual_Fa', 'ExterQual_Gd', 'ExterQual_TA']].columns)
x = np.array(x)

#Separando os dados de Treino e Teste
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

grb = GradientBoostingRegressor(n_estimators=100)
grb.fit(x_train, y_train)
gbr_pred = grb.predict(x_test)

# Calculate the absolute errors
errors_gbr = abs(gbr_pred - y_test)

# Print out the mean absolute error (mae)
r_sq = grb.score(x_test, y_test)
print('Coeficiente de Determinação (R²):', r_sq)

print('MAE:', metrics.mean_absolute_error(y_test, gbr_pred))
print('MSE:', metrics.mean_squared_error(y_test, gbr_pred))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, gbr_pred)))

parameters = {'learning_rate': [0.03, 0.04, 0.05, 0.06],
                  'subsample'    : [0.2, 0.3, 0.4],
                  'n_estimators' : [100,500,1000, 1500],
                  'max_depth'    : [8, 10]
                 }

grid_search = GridSearchCV(grb, parameters, scoring='r2', cv=2, n_jobs=-1)

grid_search.fit(x_train, y_train)

print(" Results from Grid Search " )
    print("\n The best estimator across ALL searched params:\n",grid_search.best_estimator_)
    print("\n The best score across ALL searched params:\n",grid_search.best_score_)
    print("\n The best parameters across ALL searched params:\n",grid_search.best_params_)

best_model = grid_search.best_estimator_

best_model.get_params()

grb_tunned = GradientBoostingRegressor(alpha = 0.9,
 ccp_alpha = 0.0,
 criterion = 'friedman_mse',
 init = None,
 learning_rate = 0.06,
 loss = 'squared_error',
 max_depth = 10,
 max_features = None,
 max_leaf_nodes = None,
 min_impurity_decrease = 0.0,
 min_samples_leaf = 1,
 min_samples_split = 2,
 min_weight_fraction_leaf = 0.0,
 n_estimators = 100,
 n_iter_no_change = None,
 random_state = None,
 subsample = 0.2,
 tol = 0.0001,
 validation_fraction = 0.1,
 verbose = 0,
 warm_start = False)

grb_tunned.fit(x_train, y_train)
gbr_tunned_pred = grb_tunned.predict(x_test)

# Calculate the absolute errors
errors_gbr = abs(gbr_tunned_pred - y_test)

# Print out the mean absolute error (mae)
r_sq = grb_tunned.score(x_test, y_test)
print('Coeficiente de Determinação (R²):', r_sq)

print('MAE:', metrics.mean_absolute_error(y_test, gbr_tunned_pred))
print('MSE:', metrics.mean_squared_error(y_test, gbr_tunned_pred))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, gbr_tunned_pred)))

